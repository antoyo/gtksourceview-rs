// This file was generated by gir (b010d34) from gir-files (71d73f0)
// DO NOT EDIT

use ffi;
use glib::translate::*;

bitflags! {
    pub flags CompletionActivation: u32 {
        const COMPLETION_ACTIVATION_NONE = 0,
        const COMPLETION_ACTIVATION_INTERACTIVE = 1,
        const COMPLETION_ACTIVATION_USER_REQUESTED = 2,
    }
}

#[doc(hidden)]
impl ToGlib for CompletionActivation {
    type GlibType = ffi::GtkSourceCompletionActivation;

    fn to_glib(&self) -> ffi::GtkSourceCompletionActivation {
        ffi::GtkSourceCompletionActivation::from_bits_truncate(self.bits())
    }
}

#[doc(hidden)]
impl FromGlib<ffi::GtkSourceCompletionActivation> for CompletionActivation {
    fn from_glib(value: ffi::GtkSourceCompletionActivation) -> CompletionActivation {
        CompletionActivation::from_bits_truncate(value.bits())
    }
}

bitflags! {
    pub flags DrawSpacesFlags: u32 {
        const DRAW_SPACES_SPACE = 1,
        const DRAW_SPACES_TAB = 2,
        const DRAW_SPACES_NEWLINE = 4,
        const DRAW_SPACES_NBSP = 8,
        const DRAW_SPACES_LEADING = 16,
        const DRAW_SPACES_TEXT = 32,
        const DRAW_SPACES_TRAILING = 64,
        const DRAW_SPACES_ALL = 127,
    }
}

#[doc(hidden)]
impl ToGlib for DrawSpacesFlags {
    type GlibType = ffi::GtkSourceDrawSpacesFlags;

    fn to_glib(&self) -> ffi::GtkSourceDrawSpacesFlags {
        ffi::GtkSourceDrawSpacesFlags::from_bits_truncate(self.bits())
    }
}

#[doc(hidden)]
impl FromGlib<ffi::GtkSourceDrawSpacesFlags> for DrawSpacesFlags {
    fn from_glib(value: ffi::GtkSourceDrawSpacesFlags) -> DrawSpacesFlags {
        DrawSpacesFlags::from_bits_truncate(value.bits())
    }
}

#[cfg(feature = "v3_14")]
bitflags! {
    pub flags FileSaverFlags: u32 {
        const FILE_SAVER_FLAGS_NONE = 0,
        const FILE_SAVER_FLAGS_IGNORE_INVALID_CHARS = 1,
        const FILE_SAVER_FLAGS_IGNORE_MODIFICATION_TIME = 2,
        const FILE_SAVER_FLAGS_CREATE_BACKUP = 4,
    }
}

#[cfg(feature = "v3_14")]
#[doc(hidden)]
impl ToGlib for FileSaverFlags {
    type GlibType = ffi::GtkSourceFileSaverFlags;

    fn to_glib(&self) -> ffi::GtkSourceFileSaverFlags {
        ffi::GtkSourceFileSaverFlags::from_bits_truncate(self.bits())
    }
}

#[cfg(feature = "v3_14")]
#[doc(hidden)]
impl FromGlib<ffi::GtkSourceFileSaverFlags> for FileSaverFlags {
    fn from_glib(value: ffi::GtkSourceFileSaverFlags) -> FileSaverFlags {
        FileSaverFlags::from_bits_truncate(value.bits())
    }
}

bitflags! {
    pub flags GutterRendererState: u32 {
        const GUTTER_RENDERER_STATE_NORMAL = 0,
        const GUTTER_RENDERER_STATE_CURSOR = 1,
        const GUTTER_RENDERER_STATE_PRELIT = 2,
        const GUTTER_RENDERER_STATE_SELECTED = 4,
    }
}

#[doc(hidden)]
impl ToGlib for GutterRendererState {
    type GlibType = ffi::GtkSourceGutterRendererState;

    fn to_glib(&self) -> ffi::GtkSourceGutterRendererState {
        ffi::GtkSourceGutterRendererState::from_bits_truncate(self.bits())
    }
}

#[doc(hidden)]
impl FromGlib<ffi::GtkSourceGutterRendererState> for GutterRendererState {
    fn from_glib(value: ffi::GtkSourceGutterRendererState) -> GutterRendererState {
        GutterRendererState::from_bits_truncate(value.bits())
    }
}

#[cfg(feature = "v3_18")]
bitflags! {
    pub flags SortFlags: u32 {
        const SORT_FLAGS_NONE = 0,
        const SORT_FLAGS_CASE_SENSITIVE = 1,
        const SORT_FLAGS_REVERSE_ORDER = 2,
        const SORT_FLAGS_REMOVE_DUPLICATES = 4,
    }
}

#[cfg(feature = "v3_18")]
#[doc(hidden)]
impl ToGlib for SortFlags {
    type GlibType = ffi::GtkSourceSortFlags;

    fn to_glib(&self) -> ffi::GtkSourceSortFlags {
        ffi::GtkSourceSortFlags::from_bits_truncate(self.bits())
    }
}

#[cfg(feature = "v3_18")]
#[doc(hidden)]
impl FromGlib<ffi::GtkSourceSortFlags> for SortFlags {
    fn from_glib(value: ffi::GtkSourceSortFlags) -> SortFlags {
        SortFlags::from_bits_truncate(value.bits())
    }
}

#[cfg(feature = "v3_24")]
bitflags! {
    pub flags SpaceLocationFlags: u32 {
        const SPACE_LOCATION_NONE = 0,
        const SPACE_LOCATION_LEADING = 1,
        const SPACE_LOCATION_INSIDE_TEXT = 2,
        const SPACE_LOCATION_TRAILING = 4,
        const SPACE_LOCATION_ALL = 7,
    }
}

#[cfg(feature = "v3_24")]
#[doc(hidden)]
impl ToGlib for SpaceLocationFlags {
    type GlibType = ffi::GtkSourceSpaceLocationFlags;

    fn to_glib(&self) -> ffi::GtkSourceSpaceLocationFlags {
        ffi::GtkSourceSpaceLocationFlags::from_bits_truncate(self.bits())
    }
}

#[cfg(feature = "v3_24")]
#[doc(hidden)]
impl FromGlib<ffi::GtkSourceSpaceLocationFlags> for SpaceLocationFlags {
    fn from_glib(value: ffi::GtkSourceSpaceLocationFlags) -> SpaceLocationFlags {
        SpaceLocationFlags::from_bits_truncate(value.bits())
    }
}

#[cfg(feature = "v3_24")]
bitflags! {
    pub flags SpaceTypeFlags: u32 {
        const SPACE_TYPE_NONE = 0,
        const SPACE_TYPE_SPACE = 1,
        const SPACE_TYPE_TAB = 2,
        const SPACE_TYPE_NEWLINE = 4,
        const SPACE_TYPE_NBSP = 8,
        const SPACE_TYPE_ALL = 15,
    }
}

#[cfg(feature = "v3_24")]
#[doc(hidden)]
impl ToGlib for SpaceTypeFlags {
    type GlibType = ffi::GtkSourceSpaceTypeFlags;

    fn to_glib(&self) -> ffi::GtkSourceSpaceTypeFlags {
        ffi::GtkSourceSpaceTypeFlags::from_bits_truncate(self.bits())
    }
}

#[cfg(feature = "v3_24")]
#[doc(hidden)]
impl FromGlib<ffi::GtkSourceSpaceTypeFlags> for SpaceTypeFlags {
    fn from_glib(value: ffi::GtkSourceSpaceTypeFlags) -> SpaceTypeFlags {
        SpaceTypeFlags::from_bits_truncate(value.bits())
    }
}

